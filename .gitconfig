[user]
	name = sevenc-nanashi
	email = sevenc7c@sevenc7c.com
	signingkey = 8EA980D9E38854E3A3E94F78D5D32B3B16612592
[credential]
	helper = store --file ~/.git_credentials
[color]
	ui = true
[core]
	excludesfile = ~/.gitignore_global
	autocrlf = input
  filemode = false
	symlinks = true
	whitespace = cr-at-eol
	safecrlf = false
	quotepath = false
	editor = nvim
	attributesfile = /home/sevenc7c/.gitattributes
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[init]
	defaultBranch = main
[gpg]
	program = gpg
[commit]
        verbose = true
	gpgsign = false
[alias]
	sl = !"git log --pretty=\"%C(yellow)%h%C(brightyellow)) %C(brightcyan)%an%C(cyan) %C(cyan)- %C(reset)%s%C(brightgreen)%d\""
	pushf = push --force-with-lease
	ignore = "!gi() { curl -L -s https://www.gitignore.io/api/$@ >> .gitignore ;}; gi"
	change-commits = "!f() { VAR1=$1; VAR='$'$1; OLD=$2; NEW=$3; echo \"Are you sure for replace $VAR  $OLD => $NEW ?(Y/N)\";read OK;if [ \"$OK\" = 'Y' ] ; then shift 3; git filter-branch  --env-filter \"if [ \\\"${VAR}\\\" = '$OLD' ]; then export $VAR1='$NEW';echo 'to $NEW'; fi\" $@; fi;};  f "
	sync = !"f(){ git pull && git push; }; f"
  cmerge = !"f(){ echo $1 > .git/cmerge; git merge $1 -m \"merge: $1 -> $(git rev-parse --abbrev-ref HEAD)\"; }; f"
  ccmerge = !"f(){ git commit -am \"merge: $(cat .git/cmerge) -> $(git branch --show-current)\"; rm .git/cmerge; }; f"
  undo = reset --soft HEAD~1
  amend = "commit --amend --no-edit"
[push]
	default = current
	autoSetupRemote = true
[advice]
	detachedHead = false
[pull]
	default = current
	rebase = true
	autostash = true
[http]
	postBuffer = 524288000
[rebase]
	autoStash = true
[merge "mergiraf"]
	name = mergiraf
	driver = mergiraf merge --git %O %A %B -s %S -x %X -y %Y -p %P -l %L
